// native dependencies
const url = require('url');

// third-party dependencies
const Bluebird = require('bluebird');
const pathToRegExp = require('path-to-regexp');

// h-deps
const HAccountDialog = require('h-account-client/browser/ui/dialog');

// injected modules
const habemusEditorUrls = require('habemus-editor-urls');

const pkg = require('../../package.json');

const H_ACCOUNT_URI = process.env.H_ACCOUNT_URI;
const H_WORKSPACE_URI = process.env.H_WORKSPACE_URI;

function loadConfig() {
  console.log('load configs for browser environment');

  if (!H_ACCOUNT_URI) {
    throw new Error('H_ACCOUNT_URI env var MUST be set');
  }
  if (!H_WORKSPACE_URI) {
    throw new Error('H_WORKSPACE_URI env var MUST be set');
  }

  var locationString = window.location.toString();

  // get project code from the url
  var projectCode = habemusEditorUrls.parse.workspace(locationString).projectCode;
  if (!projectCode) {
    throw new Error('could not parse projectCode');
  }

  // instantiate hAuth
  var accountDialog = new HAccountDialog({
    serverURI: H_ACCOUNT_URI,
    containerElement: document.body,
  });

  return accountDialog.ensureUser()
    .then(function (user) {

      var authToken = accountDialog.getAuthToken();

      if (!authToken) {
        throw new Error('could not retrieve authToken');
      }

      return {
        apiVersion: pkg.version,
        projectId: projectCode,
        projectName: projectCode,

        // cloud specific options
        cloud: {
          apiVersion: pkg.version,
          hWorkspaceURI: H_WORKSPACE_URI,
          authToken: authToken,
          projectCode: projectCode,
        }
      };
    })
    .catch(function (err) {
      console.warn(err);
    });
}

module.exports = loadConfig;
