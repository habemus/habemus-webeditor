// native dependencies
const url = require('url');

// third-party dependencies
const Bluebird = require('bluebird');
const pathToRegExp = require('path-to-regexp');

// h-deps
const HAccountDialog = require('h-account-client/browser/ui/dialog');

// injected modules
const habemusEditorUrls = require('habemus-editor-urls');

const pkg = require('../../../../package.json');

function loadConfig(habemus, options) {
  console.log('load configs for `browser-cloud` environment');

  var locationString = window.location.toString();

  // get project code from the url
  var projectCode = habemusEditorUrls.parse.uiWorkspace(locationString).projectCode;
  if (!projectCode) {
    var err = new Error('could not parse projectCode');

    // error is equivalent to `NotFound`
    err.name = 'NotFound';

    throw err;
  }

  return habemus.services.hAccountDialog.ensureAccount({
    ensureEmailVerified: true,
  })
  .then(function (user) {

    return {
      apiVersion: pkg.version,
      projectId: projectCode,
      projectName: projectCode,

      // cloud specific options
      cloud: {
        apiVersion: pkg.version,
        hWorkspaceURI: process.env.H_WORKSPACE_URI,
        uiDashboardURI: process.env.UI_DASHBOARD_URI,
        projectCode: projectCode,
      },

      language: {
        baseURL: '/resources/languages',

        fallback: 'en-US',

        languages: [
          {
            label: 'English (US)',
            key: 'en-US',
            data: require('../../../../src/resources/languages/en-US.json'),
          },
          {
            label: 'Português (BR)',
            key: 'pt-BR',
          },
          {
            label: '中文 (简体)',
            key: 'zn-CH',
          }
        ],
      }
    };
  });
}

module.exports = loadConfig;
