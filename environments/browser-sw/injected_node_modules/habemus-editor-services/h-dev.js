// third-party
const Bluebird = require('bluebird');

// injected
const habemusEditorUrls = require('habemus-editor-urls');

module.exports = function (habemus, options) {

  const projectId = habemus.services.config.projectId;

  return new Bluebird(function (resolve, reject) {

    var hDev = {};

    hDev.projectRootURL = habemusEditorUrls.format.workspacePreview(projectId);

    // functions
    hDev.pathExists = function (path) {
      console.log('pathExists', path);

      return Bluebird.resolve(false);
    };

    hDev.remove = function (path) {
      console.log('remove', path);

      return Bluebird.resolve();
    };

    hDev.move = function (path) {
      console.log('move', arguments);

      return Bluebird.resolve();
    };

    hDev.readDirectory = function (dirpath) {
      console.log('readDirectory', arguments);
      return Bluebird.resolve([]);
    };

    hDev.createFile = function (filepath, contents) {
      console.log('createFile', arguments);

      return Bluebird.resolve();
    };

    hDev.createDirectory = function (dirpath) {
      console.log('createDirectory', arguments);

      return Bluebird.resolve();
    };

    hDev.subscribe = function () {
      console.log('subscribe', arguments);

      return Bluebird.resolve();
    };

    hDev.startWatching = function () {
      console.log('startWatching', arguments);
      return Bluebird.resolve();
    };

    hDev.stopWatching = function () {
      console.log('stopWatching', arguments);
      return Bluebird.resolve();
    };

    resolve(hDev);
  });

};
