// third-party
const Bluebird = require('bluebird');

module.exports = function (habemus, options) {

  if (window.navigator.serviceWorker.controller) {
    console.log('ServiceWorker worker already registered');

    return window.navigator.serviceWorker;
  } else {

    console.log('ServiceWorker not registered, start registration process');

    // sw registration (should be done only once)
    return navigator.serviceWorker.register('/service-worker.js', { scope: '/' })
      // Wait until the service worker is active.
      .then(function(registration) {
        console.log('ServiceWorker registration successful with scope: ', registration.scope);

        return window.navigator.serviceWorker;

        return navigator.serviceWorker.ready;
      })
      .then(function () {

        if (navigator.serviceWorker.controller) {
          console.log('The service worker is currently handling network operations.');

          return navigator.serviceWorker;
        } else {
          console.log('Please reload this page to allow the service worker to handle network operations.');
        }
      })
      .catch(function(error) {
        // Something went wrong during registration. The service-worker.js file
        // might be unavailable or contain a syntax error.
        console.warn('sw error', error)
      });
  }

};
