// native
const url = require('url');

// third-party
const Bluebird = require('bluebird');

// injected
const habemusEditorUrls = require('habemus-editor-urls');

module.exports = function (habemus, options) {

  console.log('load configs for `browser-sw` environment');

  var locationString = window.location.toString();

  // get project code from the url
  var projectCode = habemusEditorUrls.parse.uiWorkspace(locationString).projectCode;
  if (!projectCode) {
    var err = new Error('could not parse projectCode');

    // error is equivalent to `NotFound`
    err.name = 'NotFound';

    throw err;
  }

  return new Bluebird(function (resolve, reject) {
    resolve({
      apiVersion: '1.0.0',
      projectId: projectCode,
      projectName: projectCode,
      
      language: {
        baseURL: process.env.LANGUAGES_BASE_URL || '/resources/languages',
    
        fallback: 'en-US',
    
        languages: [
          {
            label: 'English (US)',
            key: 'en-US',
            data: require('../../../../../src/resources/languages/en-US.json'),
          },
          {
            label: 'Português (BR)',
            key: 'pt-BR',
          },
          {
            label: '中文 (简体)',
            key: 'zn-CH',
          }
        ],
      },
    });
  });

};
