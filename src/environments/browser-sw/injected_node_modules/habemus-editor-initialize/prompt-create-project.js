// native
const url = require('url');

// third-party
const Bluebird = require('bluebird');
const browserParseFiles = require('browser-parse-files');

module.exports = function (habemus, options) {

  // check if there are files in the filesystem
  return habemus.services.hDev.readDirectory('/').then(function (results) {

    if (results.length === 0) {
      // project is empty.
      // ask user to create a new project
      return habemus.ui.projectDialogs.new.prompt({
        cancellable: false,
      })
      .then(function (res) {
        switch (res.type) {
          case 'file-input':
            return habemus.services.zip.unzip(res.value.files[0], '/');

            break;
          case 'directory-input':
            // UNSUPPORTED FOR NOW
            break;
          case 'drop-event':
            // UNSUPPORTED FOR NOW
            break;
        }
      })
      .catch(function (err) {
        if (err.canceled) {
          // user canceled, ignore
          return;
        }

        habemus.services.dialogs.alert('An unknown error happened, please retry');
        console.warn(err);
        throw err;
      });
    }
  })
  .catch(function (err) {
    if (err.canceled) {
      // user canceled, ignore
      return;
    }

    habemus.services.dialogs.alert('An unknown error happened, please retry');
    console.warn(err);
    throw err;
  });

};
