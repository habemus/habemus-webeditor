// native
const url = require('url');

// constants
const CONSTANTS = require('../../../../../constants');

// TODO: move into shared editor logic.
// This code is repeated in browser-sw and browser-cloud

/**
 * TODO: separate into single file
 * 
 * Language definition cascade:
 * - queryString.lang
 * - localStorage
 * - navigator.language
 */
function _setupLanguageResolution() {

  var selectedLanguageKey = url.parse(window.location.toString(), true).query.lang;

  if (!selectedLanguageKey) {
    try {
      selectedLanguageKey = window.localStorage.getItem(
        CONSTANTS.HABEMUS_LANGUAGE_LS_KEY
      );
    } catch (e) {
      // probably in private mode
    }
  }

  if (!selectedLanguageKey) {
    selectedLanguageKey = window.navigator.language;
  }

  if (selectedLanguageKey) {
    try {
      window.localStorage.setItem(
        CONSTANTS.HABEMUS_LANGUAGE_LS_KEY,
        selectedLanguageKey
      );
    } catch (e) {
      // probably in private mode
      console.warn('could not save selectedLanguageKey to localStorage');
    }
  }
}

module.exports = function (habemus, options) {
  
  _setupLanguageResolution();
  
  return {
    baseURL: process.env.LANGUAGES_BASE_URL || '/resources/languages',

    fallback: 'en-US',

    languages: [
      {
        label: 'English (US)',
        key: 'en-US',
        data: require('../../../../../resources/languages/en-US.json'),
      },
      {
        label: 'Português (BR)',
        key: 'pt-BR',
        data: require('../../../../../resources/languages/pt-BR.json'),
      },
      // {
      //   label: '中文 (简体)',
      //   key: 'zn-CH',
      // }
    ],
  };
};
