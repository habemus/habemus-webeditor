// native
const url = require('url');

// third-party
const Bluebird = require('bluebird');

module.exports = function (habemus, options) {

  var httpService = {};

  httpService.fetchAsArrayBuffer = function (sourceURL) {
    if (!sourceURL) {
      throw new Error('sourceURL is required');
    }

    if (typeof window.fetch !== 'function') {
      habemus.services.dialogs.alert('Unfortunately this browser does not support the download API :(');
      return;
    }

    return Bluebird.resolve(window.fetch(sourceURL)).then(function (response) {
      if (response.status === 200 || response.status === 0) {
        return Bluebird.resolve(response.arrayBuffer())
      } else {
        return Bluebird.reject(new Error(response.statusText))
      }
    });
  }

  httpService.download = function (sourceURL, dest) {

    if (!sourceURL) {
      throw new Error('sourceURL is required');
    }

    if (!dest) {
      var urlPath = url.parse(sourceURL).path;

      var urlPathSplit = urlPath.split('/');
      dest = urlPathSplit[urlPathSplit.length - 1];
    }
    
    return httpService.fetchAsArrayBuffer(sourceURL).then(function (fileContents) {
      return habemus.services.hDev.createFile(dest, fileContents);
    });
  };

  return httpService;
};
